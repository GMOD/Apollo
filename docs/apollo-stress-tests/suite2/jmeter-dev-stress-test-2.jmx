<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.8" jmeter="2.13 r1665067">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="server" elementType="Argument">
            <stringProp name="Argument.name">server</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="instance_name" elementType="Argument">
            <stringProp name="Argument.name">instance_name</stringProp>
            <stringProp name="Argument.value">apollo</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="feature_id" elementType="Argument">
            <stringProp name="Argument.name">feature_id</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="track" elementType="Argument">
            <stringProp name="Argument.name">track</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <stringProp name="CookieManager.policy">default</stringProp>
        <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
      </CookieManager>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group 1" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1404149611000</longProp>
        <longProp name="ThreadGroup.end_time">1404149611000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&apos;username&apos;: &apos;user.one@example.com&apos;, &apos;password&apos;: &apos;userone&apos;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add transcript L1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;add_transcript&quot;,&quot;username&quot;:&quot;user.one@example.com&quot;,&quot;features&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:898823,&quot;strand&quot;:-1,&quot;fmax&quot;:927500},&quot;name&quot;:&quot;GB42150-RA&quot;,&quot;children&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:898823,&quot;strand&quot;:-1,&quot;fmax&quot;:901952},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:898823,&quot;strand&quot;:-1,&quot;fmax&quot;:902098},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:902222,&quot;strand&quot;:-1,&quot;fmax&quot;:902445},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:903039,&quot;strand&quot;:-1,&quot;fmax&quot;:903347},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:903608,&quot;strand&quot;:-1,&quot;fmax&quot;:903778},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:908616,&quot;strand&quot;:-1,&quot;fmax&quot;:908813},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:915032,&quot;strand&quot;:-1,&quot;fmax&quot;:915680},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:926564,&quot;strand&quot;:-1,&quot;fmax&quot;:927500},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:901952,&quot;strand&quot;:-1,&quot;fmax&quot;:927500},&quot;type&quot;:{&quot;name&quot;:&quot;CDS&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;type&quot;:{&quot;name&quot;:&quot;mRNA&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;track&quot;:&quot;Group1.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/addTranscript</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract feature_id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">feature_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;uniquename&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract track" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">track</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sequence&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete feature L1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;track&quot;: &quot;${track}&quot;, &quot;features&quot;: [ { &quot;uniquename&quot;: &quot;${feature_id}&quot; } ], &quot;operation&quot;: &quot;delete_feature&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/deleteFeature</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group 2" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1404149611000</longProp>
        <longProp name="ThreadGroup.end_time">1404149611000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&apos;username&apos;: &apos;user.two@example.com&apos;, &apos;password&apos;: &apos;usertwo&apos;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add transcript L2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;add_transcript&quot;,&quot;username&quot;:&quot;user.two@example.com&quot;,&quot;features&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:874076,&quot;strand&quot;:-1,&quot;fmax&quot;:874361},&quot;name&quot;:&quot;GB40738-RA&quot;,&quot;children&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:874076,&quot;strand&quot;:-1,&quot;fmax&quot;:874091},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:874214,&quot;strand&quot;:-1,&quot;fmax&quot;:874252},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:874336,&quot;strand&quot;:-1,&quot;fmax&quot;:874361},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:874076,&quot;strand&quot;:-1,&quot;fmax&quot;:874361},&quot;type&quot;:{&quot;name&quot;:&quot;CDS&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;type&quot;:{&quot;name&quot;:&quot;mRNA&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;track&quot;:&quot;Group1.10&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/addTranscript</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract feature_id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">feature_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;uniquename&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract track" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">track</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sequence&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete feature L2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;track&quot;: &quot;${track}&quot;, &quot;features&quot;: [ { &quot;uniquename&quot;: &quot;${feature_id}&quot; } ], &quot;operation&quot;: &quot;delete_feature&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/deleteFeature</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group 3" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1404149611000</longProp>
        <longProp name="ThreadGroup.end_time">1404149611000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&apos;username&apos;: &apos;user.three@example.com&apos;, &apos;password&apos;: &apos;userthree&apos;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add transcript L3" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;add_transcript&quot;,&quot;username&quot;:&quot;user.three@example.com&quot;,&quot;features&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:418378,&quot;strand&quot;:1,&quot;fmax&quot;:516127},&quot;name&quot;:&quot;GB43015-RA&quot;,&quot;children&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:512448,&quot;strand&quot;:1,&quot;fmax&quot;:516127},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:418378,&quot;strand&quot;:1,&quot;fmax&quot;:418565},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:437082,&quot;strand&quot;:1,&quot;fmax&quot;:437183},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:437269,&quot;strand&quot;:1,&quot;fmax&quot;:437490},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:438889,&quot;strand&quot;:1,&quot;fmax&quot;:439077},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:502172,&quot;strand&quot;:1,&quot;fmax&quot;:502238},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:506903,&quot;strand&quot;:1,&quot;fmax&quot;:507200},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:507355,&quot;strand&quot;:1,&quot;fmax&quot;:507765},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:508127,&quot;strand&quot;:1,&quot;fmax&quot;:508415},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:509640,&quot;strand&quot;:1,&quot;fmax&quot;:509781},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:510077,&quot;strand&quot;:1,&quot;fmax&quot;:510261},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:510331,&quot;strand&quot;:1,&quot;fmax&quot;:510631},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:510788,&quot;strand&quot;:1,&quot;fmax&quot;:511399},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:511489,&quot;strand&quot;:1,&quot;fmax&quot;:511750},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:511837,&quot;strand&quot;:1,&quot;fmax&quot;:512005},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:512094,&quot;strand&quot;:1,&quot;fmax&quot;:516127},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:418378,&quot;strand&quot;:1,&quot;fmax&quot;:512448},&quot;type&quot;:{&quot;name&quot;:&quot;CDS&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;type&quot;:{&quot;name&quot;:&quot;mRNA&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;track&quot;:&quot;Group1.16&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/addTranscript</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract feature_id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">feature_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;uniquename&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract track" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">track</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sequence&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete feature L3" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;track&quot;: &quot;${track}&quot;, &quot;features&quot;: [ { &quot;uniquename&quot;: &quot;${feature_id}&quot; } ], &quot;operation&quot;: &quot;delete_feature&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/deleteFeature</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group 4" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1404149611000</longProp>
        <longProp name="ThreadGroup.end_time">1404149611000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&apos;username&apos;: &apos;user.four@example.com&apos;, &apos;password&apos;: &apos;userfour&apos;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add transcript L4" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;add_transcript&quot;,&quot;username&quot;:&quot;user.four@example.com&quot;,&quot;features&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:383802,&quot;strand&quot;:-1,&quot;fmax&quot;:501601},&quot;name&quot;:&quot;GB42156-RA&quot;,&quot;children&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:383802,&quot;strand&quot;:-1,&quot;fmax&quot;:386863},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:383802,&quot;strand&quot;:-1,&quot;fmax&quot;:387151},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:388514,&quot;strand&quot;:-1,&quot;fmax&quot;:388871},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:390098,&quot;strand&quot;:-1,&quot;fmax&quot;:390391},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:390611,&quot;strand&quot;:-1,&quot;fmax&quot;:390964},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:392553,&quot;strand&quot;:-1,&quot;fmax&quot;:392854},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:395196,&quot;strand&quot;:-1,&quot;fmax&quot;:395323},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:426566,&quot;strand&quot;:-1,&quot;fmax&quot;:426716},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:433180,&quot;strand&quot;:-1,&quot;fmax&quot;:433330},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:501556,&quot;strand&quot;:-1,&quot;fmax&quot;:501601},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:386863,&quot;strand&quot;:-1,&quot;fmax&quot;:501601},&quot;type&quot;:{&quot;name&quot;:&quot;CDS&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;type&quot;:{&quot;name&quot;:&quot;mRNA&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;track&quot;:&quot;Group1.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/addTranscript</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract feature_id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">feature_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;uniquename&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract track" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">track</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sequence&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete feature L4" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;track&quot;: &quot;${track}&quot;, &quot;features&quot;: [ { &quot;uniquename&quot;: &quot;${feature_id}&quot; } ], &quot;operation&quot;: &quot;delete_feature&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/deleteFeature</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group 5" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">8</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1404149611000</longProp>
        <longProp name="ThreadGroup.end_time">1404149611000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&apos;username&apos;: &apos;user.five@example.com&apos;, &apos;password&apos;: &apos;userfive&apos;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add transcript L5" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;add_transcript&quot;,&quot;username&quot;:&quot;user.five@example.com&quot;,&quot;features&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:976735,&quot;strand&quot;:1,&quot;fmax&quot;:995721},&quot;name&quot;:&quot;GB42183-RA&quot;,&quot;children&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:995216,&quot;strand&quot;:1,&quot;fmax&quot;:995721},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:976735,&quot;strand&quot;:1,&quot;fmax&quot;:976888},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:992139,&quot;strand&quot;:1,&quot;fmax&quot;:992559},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:992748,&quot;strand&quot;:1,&quot;fmax&quot;:993041},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:993307,&quot;strand&quot;:1,&quot;fmax&quot;:995721},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:976735,&quot;strand&quot;:1,&quot;fmax&quot;:995216},&quot;type&quot;:{&quot;name&quot;:&quot;CDS&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;type&quot;:{&quot;name&quot;:&quot;mRNA&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;track&quot;:&quot;Group1.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/addTranscript</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract feature_id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">feature_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;uniquename&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract track" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">track</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sequence&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete feature L5" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;track&quot;: &quot;${track}&quot;, &quot;features&quot;: [ { &quot;uniquename&quot;: &quot;${feature_id}&quot; } ], &quot;operation&quot;: &quot;delete_feature&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/deleteFeature</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group 6" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">8</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1404149611000</longProp>
        <longProp name="ThreadGroup.end_time">1404149611000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&apos;username&apos;: &apos;user.six@example.com&apos;, &apos;password&apos;: &apos;usersix&apos;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add transcript L6" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;add_transcript&quot;,&quot;username&quot;:&quot;user.six@example.com&quot;,&quot;features&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:238521,&quot;strand&quot;:1,&quot;fmax&quot;:241316},&quot;name&quot;:&quot;GB40030-RA&quot;,&quot;children&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:238521,&quot;strand&quot;:1,&quot;fmax&quot;:238636},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:240332,&quot;strand&quot;:1,&quot;fmax&quot;:241316},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:238521,&quot;strand&quot;:1,&quot;fmax&quot;:238814},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:238985,&quot;strand&quot;:1,&quot;fmax&quot;:239199},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:239277,&quot;strand&quot;:1,&quot;fmax&quot;:239576},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:239641,&quot;strand&quot;:1,&quot;fmax&quot;:240106},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:240180,&quot;strand&quot;:1,&quot;fmax&quot;:241316},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:238636,&quot;strand&quot;:1,&quot;fmax&quot;:240332},&quot;type&quot;:{&quot;name&quot;:&quot;CDS&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;type&quot;:{&quot;name&quot;:&quot;mRNA&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;track&quot;:&quot;Group1.33&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/addTranscript</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract feature_id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">feature_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;uniquename&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract track" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">track</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sequence&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete feature L6" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;track&quot;: &quot;${track}&quot;, &quot;features&quot;: [ { &quot;uniquename&quot;: &quot;${feature_id}&quot; } ], &quot;operation&quot;: &quot;delete_feature&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/deleteFeature</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group 7" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">8</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1404149611000</longProp>
        <longProp name="ThreadGroup.end_time">1404149611000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&apos;username&apos;: &apos;user.seven@example.com&apos;, &apos;password&apos;: &apos;userseven&apos;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add transcript L7" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;add_transcript&quot;,&quot;username&quot;:&quot;user.seven@example.com&quot;,&quot;features&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:386401,&quot;strand&quot;:-1,&quot;fmax&quot;:426902},&quot;name&quot;:&quot;GB40010-RA&quot;,&quot;children&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:386401,&quot;strand&quot;:-1,&quot;fmax&quot;:386621},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:387038,&quot;strand&quot;:-1,&quot;fmax&quot;:387094},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:387679,&quot;strand&quot;:-1,&quot;fmax&quot;:387923},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:388063,&quot;strand&quot;:-1,&quot;fmax&quot;:388570},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:388753,&quot;strand&quot;:-1,&quot;fmax&quot;:388792},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:388898,&quot;strand&quot;:-1,&quot;fmax&quot;:389083},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:389204,&quot;strand&quot;:-1,&quot;fmax&quot;:391931},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:394196,&quot;strand&quot;:-1,&quot;fmax&quot;:394454},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:398252,&quot;strand&quot;:-1,&quot;fmax&quot;:398555},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:404426,&quot;strand&quot;:-1,&quot;fmax&quot;:405383},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:405467,&quot;strand&quot;:-1,&quot;fmax&quot;:405767},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:405915,&quot;strand&quot;:-1,&quot;fmax&quot;:406612},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:406686,&quot;strand&quot;:-1,&quot;fmax&quot;:412691},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:415224,&quot;strand&quot;:-1,&quot;fmax&quot;:415359},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:415701,&quot;strand&quot;:-1,&quot;fmax&quot;:416007},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:416123,&quot;strand&quot;:-1,&quot;fmax&quot;:416228},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:417581,&quot;strand&quot;:-1,&quot;fmax&quot;:426902},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:386401,&quot;strand&quot;:-1,&quot;fmax&quot;:426902},&quot;type&quot;:{&quot;name&quot;:&quot;CDS&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;type&quot;:{&quot;name&quot;:&quot;mRNA&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;track&quot;:&quot;Group1.33&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/addTranscript</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract feature_id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">feature_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;uniquename&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract track" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">track</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sequence&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete feature L7" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;track&quot;: &quot;${track}&quot;, &quot;features&quot;: [ { &quot;uniquename&quot;: &quot;${feature_id}&quot; } ], &quot;operation&quot;: &quot;delete_feature&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/deleteFeature</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group 8" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">8</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1404149611000</longProp>
        <longProp name="ThreadGroup.end_time">1404149611000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&apos;username&apos;: &apos;user.eight@example.com&apos;, &apos;password&apos;: &apos;usereight&apos;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add transcript L8" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;add_transcript&quot;,&quot;username&quot;:&quot;user.eight@example.com&quot;,&quot;features&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:223558,&quot;strand&quot;:1,&quot;fmax&quot;:238576},&quot;name&quot;:&quot;GB40808-RA&quot;,&quot;children&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:223558,&quot;strand&quot;:1,&quot;fmax&quot;:223806},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:224773,&quot;strand&quot;:1,&quot;fmax&quot;:224779},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:238533,&quot;strand&quot;:1,&quot;fmax&quot;:238576},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:223558,&quot;strand&quot;:1,&quot;fmax&quot;:223806},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:224773,&quot;strand&quot;:1,&quot;fmax&quot;:224947},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:225026,&quot;strand&quot;:1,&quot;fmax&quot;:225401},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:225487,&quot;strand&quot;:1,&quot;fmax&quot;:225840},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:225939,&quot;strand&quot;:1,&quot;fmax&quot;:226699},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:226844,&quot;strand&quot;:1,&quot;fmax&quot;:226953},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:227905,&quot;strand&quot;:1,&quot;fmax&quot;:228034},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:228188,&quot;strand&quot;:1,&quot;fmax&quot;:233629},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:233692,&quot;strand&quot;:1,&quot;fmax&quot;:235423},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:235498,&quot;strand&quot;:1,&quot;fmax&quot;:236892},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:237902,&quot;strand&quot;:1,&quot;fmax&quot;:238066},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:238289,&quot;strand&quot;:1,&quot;fmax&quot;:238344},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:238508,&quot;strand&quot;:1,&quot;fmax&quot;:238576},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:224779,&quot;strand&quot;:1,&quot;fmax&quot;:238533},&quot;type&quot;:{&quot;name&quot;:&quot;CDS&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;type&quot;:{&quot;name&quot;:&quot;mRNA&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;track&quot;:&quot;Group1.10&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/addTranscript</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract feature_id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">feature_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;uniquename&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract track" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">track</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sequence&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete feature L8" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;track&quot;: &quot;${track}&quot;, &quot;features&quot;: [ { &quot;uniquename&quot;: &quot;${feature_id}&quot; } ], &quot;operation&quot;: &quot;delete_feature&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/deleteFeature</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group 9" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">8</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1404149611000</longProp>
        <longProp name="ThreadGroup.end_time">1404149611000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&apos;username&apos;: &apos;user.nine@example.com&apos;, &apos;password&apos;: &apos;usernine&apos;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add transcript L9" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;add_transcript&quot;,&quot;username&quot;:&quot;user.nine@example.com&quot;,&quot;features&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:107997,&quot;strand&quot;:1,&quot;fmax&quot;:120164},&quot;name&quot;:&quot;GB48942-RA&quot;,&quot;children&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:107997,&quot;strand&quot;:1,&quot;fmax&quot;:108043},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:109167,&quot;strand&quot;:1,&quot;fmax&quot;:109223},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:110009,&quot;strand&quot;:1,&quot;fmax&quot;:110178},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:110978,&quot;strand&quot;:1,&quot;fmax&quot;:111176},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117265,&quot;strand&quot;:1,&quot;fmax&quot;:117355},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117748,&quot;strand&quot;:1,&quot;fmax&quot;:117915},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:118295,&quot;strand&quot;:1,&quot;fmax&quot;:118576},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:119185,&quot;strand&quot;:1,&quot;fmax&quot;:119398},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:119998,&quot;strand&quot;:1,&quot;fmax&quot;:120164},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:107997,&quot;strand&quot;:1,&quot;fmax&quot;:120164},&quot;type&quot;:{&quot;name&quot;:&quot;CDS&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;type&quot;:{&quot;name&quot;:&quot;mRNA&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;track&quot;:&quot;Group1.36&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/addTranscript</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract feature_id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">feature_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;uniquename&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract track" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">track</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sequence&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete feature L9" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;track&quot;: &quot;${track}&quot;, &quot;features&quot;: [ { &quot;uniquename&quot;: &quot;${feature_id}&quot; } ], &quot;operation&quot;: &quot;delete_feature&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/deleteFeature</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group 10" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">8</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1404149611000</longProp>
        <longProp name="ThreadGroup.end_time">1404149611000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&apos;username&apos;: &apos;user.ten@example.com&apos;, &apos;password&apos;: &apos;userten&apos;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add transcript L10" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;add_transcript&quot;,&quot;username&quot;:&quot;user.ten@example.com&quot;,&quot;features&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:300388,&quot;strand&quot;:1,&quot;fmax&quot;:328828},&quot;name&quot;:&quot;GB42167-RA&quot;,&quot;children&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:325348,&quot;strand&quot;:1,&quot;fmax&quot;:328828},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:300388,&quot;strand&quot;:1,&quot;fmax&quot;:300473},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:317938,&quot;strand&quot;:1,&quot;fmax&quot;:318039},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:318979,&quot;strand&quot;:1,&quot;fmax&quot;:319128},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:320137,&quot;strand&quot;:1,&quot;fmax&quot;:320990},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:323500,&quot;strand&quot;:1,&quot;fmax&quot;:324025},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:325090,&quot;strand&quot;:1,&quot;fmax&quot;:328828},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:300388,&quot;strand&quot;:1,&quot;fmax&quot;:325348},&quot;type&quot;:{&quot;name&quot;:&quot;CDS&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;type&quot;:{&quot;name&quot;:&quot;mRNA&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;track&quot;:&quot;Group1.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/addTranscript</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract feature_id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">feature_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;uniquename&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract track" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">track</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sequence&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete feature L10" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;track&quot;: &quot;${track}&quot;, &quot;features&quot;: [ { &quot;uniquename&quot;: &quot;${feature_id}&quot; } ], &quot;operation&quot;: &quot;delete_feature&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/deleteFeature</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group 11" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">8</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1404149611000</longProp>
        <longProp name="ThreadGroup.end_time">1404149611000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&apos;username&apos;: &apos;user.eleven@example.com&apos;, &apos;password&apos;: &apos;usereleven&apos;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add transcript L11" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;add_transcript&quot;,&quot;username&quot;:&quot;user.eleven@example.com&quot;,&quot;features&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:355088,&quot;strand&quot;:-1,&quot;fmax&quot;:356284},&quot;name&quot;:&quot;GB42157-RA&quot;,&quot;children&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:355088,&quot;strand&quot;:-1,&quot;fmax&quot;:355214},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:356275,&quot;strand&quot;:-1,&quot;fmax&quot;:356284},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:355088,&quot;strand&quot;:-1,&quot;fmax&quot;:356284},&quot;type&quot;:{&quot;name&quot;:&quot;CDS&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;type&quot;:{&quot;name&quot;:&quot;mRNA&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;track&quot;:&quot;Group1.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/addTranscript</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract feature_id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">feature_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;uniquename&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract track" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">track</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sequence&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete feature L11" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;track&quot;: &quot;${track}&quot;, &quot;features&quot;: [ { &quot;uniquename&quot;: &quot;${feature_id}&quot; } ], &quot;operation&quot;: &quot;delete_feature&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/deleteFeature</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group 12" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">8</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1404149611000</longProp>
        <longProp name="ThreadGroup.end_time">1404149611000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&apos;username&apos;: &apos;user.twelve@example.com&apos;, &apos;password&apos;: &apos;usertwelve&apos;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add transcript L12" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;add_transcript&quot;,&quot;username&quot;:&quot;user.twelve@example.com&quot;,&quot;features&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:66900638,&quot;strand&quot;:1,&quot;fmax&quot;:66956304},&quot;name&quot;:&quot;NM_001046507.2&quot;,&quot;children&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:66900638,&quot;strand&quot;:1,&quot;fmax&quot;:66900789},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:66913722,&quot;strand&quot;:1,&quot;fmax&quot;:66913817},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:66923693,&quot;strand&quot;:1,&quot;fmax&quot;:66923830},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:66925868,&quot;strand&quot;:1,&quot;fmax&quot;:66926014},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:66935370,&quot;strand&quot;:1,&quot;fmax&quot;:66935628},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:66955876,&quot;strand&quot;:1,&quot;fmax&quot;:66956304},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:66900683,&quot;strand&quot;:1,&quot;fmax&quot;:66955923},&quot;type&quot;:{&quot;name&quot;:&quot;CDS&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;type&quot;:{&quot;name&quot;:&quot;mRNA&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;track&quot;:&quot;GK000001.2&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/addTranscript</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract feature_id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">feature_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;uniquename&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract track" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">track</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sequence&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete feature L12" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;track&quot;: &quot;${track}&quot;, &quot;features&quot;: [ { &quot;uniquename&quot;: &quot;${feature_id}&quot; } ], &quot;operation&quot;: &quot;delete_feature&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/deleteFeature</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group 13" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">8</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1404149611000</longProp>
        <longProp name="ThreadGroup.end_time">1404149611000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&apos;username&apos;: &apos;user.thirteen@example.com&apos;, &apos;password&apos;: &apos;userthirteen&apos;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add transcript L13" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;add_transcript&quot;,&quot;username&quot;:&quot;user.thirteen@example.com&quot;,&quot;features&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:117545733,&quot;strand&quot;:-1,&quot;fmax&quot;:117953888},&quot;name&quot;:&quot;XM_010801489.1&quot;,&quot;children&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:117953802,&quot;strand&quot;:-1,&quot;fmax&quot;:117953888},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117952687,&quot;strand&quot;:-1,&quot;fmax&quot;:117952914},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117917343,&quot;strand&quot;:-1,&quot;fmax&quot;:117917448},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117912865,&quot;strand&quot;:-1,&quot;fmax&quot;:117913057},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117911442,&quot;strand&quot;:-1,&quot;fmax&quot;:117911475},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117908173,&quot;strand&quot;:-1,&quot;fmax&quot;:117908333},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117879388,&quot;strand&quot;:-1,&quot;fmax&quot;:117879558},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117876330,&quot;strand&quot;:-1,&quot;fmax&quot;:117876441},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117875019,&quot;strand&quot;:-1,&quot;fmax&quot;:117875289},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117871644,&quot;strand&quot;:-1,&quot;fmax&quot;:117871794},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117870717,&quot;strand&quot;:-1,&quot;fmax&quot;:117870817},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117870265,&quot;strand&quot;:-1,&quot;fmax&quot;:117870402},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117847937,&quot;strand&quot;:-1,&quot;fmax&quot;:117848069},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117845174,&quot;strand&quot;:-1,&quot;fmax&quot;:117845301},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117842483,&quot;strand&quot;:-1,&quot;fmax&quot;:117842698},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117841077,&quot;strand&quot;:-1,&quot;fmax&quot;:117841182},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117840071,&quot;strand&quot;:-1,&quot;fmax&quot;:117840248},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117628973,&quot;strand&quot;:-1,&quot;fmax&quot;:117629121},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117622216,&quot;strand&quot;:-1,&quot;fmax&quot;:117622335},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117621441,&quot;strand&quot;:-1,&quot;fmax&quot;:117621585},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117620452,&quot;strand&quot;:-1,&quot;fmax&quot;:117620616},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117613843,&quot;strand&quot;:-1,&quot;fmax&quot;:117613975},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117609014,&quot;strand&quot;:-1,&quot;fmax&quot;:117609242},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117608286,&quot;strand&quot;:-1,&quot;fmax&quot;:117608428},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117606551,&quot;strand&quot;:-1,&quot;fmax&quot;:117606672},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117605245,&quot;strand&quot;:-1,&quot;fmax&quot;:117605359},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117601335,&quot;strand&quot;:-1,&quot;fmax&quot;:117601535},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117598247,&quot;strand&quot;:-1,&quot;fmax&quot;:117598436},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117597568,&quot;strand&quot;:-1,&quot;fmax&quot;:117597643},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117597260,&quot;strand&quot;:-1,&quot;fmax&quot;:117597451},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117596290,&quot;strand&quot;:-1,&quot;fmax&quot;:117596452},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117593496,&quot;strand&quot;:-1,&quot;fmax&quot;:117593608},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117590511,&quot;strand&quot;:-1,&quot;fmax&quot;:117590601},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117589369,&quot;strand&quot;:-1,&quot;fmax&quot;:117589479},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117589041,&quot;strand&quot;:-1,&quot;fmax&quot;:117589177},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117588084,&quot;strand&quot;:-1,&quot;fmax&quot;:117588246},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117585398,&quot;strand&quot;:-1,&quot;fmax&quot;:117585761},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117583116,&quot;strand&quot;:-1,&quot;fmax&quot;:117583273},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117578859,&quot;strand&quot;:-1,&quot;fmax&quot;:117579071},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117563475,&quot;strand&quot;:-1,&quot;fmax&quot;:117563565},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117561347,&quot;strand&quot;:-1,&quot;fmax&quot;:117561577},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117559524,&quot;strand&quot;:-1,&quot;fmax&quot;:117559681},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117556594,&quot;strand&quot;:-1,&quot;fmax&quot;:117556708},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117550064,&quot;strand&quot;:-1,&quot;fmax&quot;:117550146},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117545733,&quot;strand&quot;:-1,&quot;fmax&quot;:117548578},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:117548525,&quot;strand&quot;:-1,&quot;fmax&quot;:117952786},&quot;type&quot;:{&quot;name&quot;:&quot;CDS&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;type&quot;:{&quot;name&quot;:&quot;mRNA&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;track&quot;:&quot;GK000001.2&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/addTranscript</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract feature_id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">feature_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;uniquename&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract track" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">track</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sequence&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete feature L13" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;track&quot;: &quot;${track}&quot;, &quot;features&quot;: [ { &quot;uniquename&quot;: &quot;${feature_id}&quot; } ], &quot;operation&quot;: &quot;delete_feature&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/deleteFeature</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group 14" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">8</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1404149611000</longProp>
        <longProp name="ThreadGroup.end_time">1404149611000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&apos;username&apos;: &apos;user.fourteen@example.com&apos;, &apos;password&apos;: &apos;userfourteen&apos;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add transcript L14" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;add_transcript&quot;,&quot;username&quot;:&quot;user.fourteen@example.com&quot;,&quot;features&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:64486958,&quot;strand&quot;:-1,&quot;fmax&quot;:64750899},&quot;name&quot;:&quot;NM_001205725.1&quot;,&quot;children&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:64749947,&quot;strand&quot;:-1,&quot;fmax&quot;:64750899},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:64486958,&quot;strand&quot;:-1,&quot;fmax&quot;:64488296},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:64487835,&quot;strand&quot;:-1,&quot;fmax&quot;:64750899},&quot;type&quot;:{&quot;name&quot;:&quot;CDS&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;type&quot;:{&quot;name&quot;:&quot;mRNA&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;track&quot;:&quot;GK000006.2&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/addTranscript</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract feature_id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">feature_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;uniquename&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract track" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">track</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sequence&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete feature L14" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;track&quot;: &quot;${track}&quot;, &quot;features&quot;: [ { &quot;uniquename&quot;: &quot;${feature_id}&quot; } ], &quot;operation&quot;: &quot;delete_feature&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/deleteFeature</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group 15" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">8</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1404149611000</longProp>
        <longProp name="ThreadGroup.end_time">1404149611000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&apos;username&apos;: &apos;user.fifteen@example.com&apos;, &apos;password&apos;: &apos;userfifteen&apos;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add transcript L15" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;add_transcript&quot;,&quot;username&quot;:&quot;user.fifteen@example.com&quot;,&quot;features&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:36284953,&quot;strand&quot;:1,&quot;fmax&quot;:36432436},&quot;name&quot;:&quot;XM_005207756.2&quot;,&quot;children&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:36284953,&quot;strand&quot;:1,&quot;fmax&quot;:36285264},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:36287025,&quot;strand&quot;:1,&quot;fmax&quot;:36287171},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:36295101,&quot;strand&quot;:1,&quot;fmax&quot;:36295143},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:36301790,&quot;strand&quot;:1,&quot;fmax&quot;:36301933},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:36429563,&quot;strand&quot;:1,&quot;fmax&quot;:36429647},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:36431839,&quot;strand&quot;:1,&quot;fmax&quot;:36432436},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:36287050,&quot;strand&quot;:1,&quot;fmax&quot;:36431872},&quot;type&quot;:{&quot;name&quot;:&quot;CDS&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;type&quot;:{&quot;name&quot;:&quot;mRNA&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;track&quot;:&quot;GK000006.2&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/addTranscript</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract feature_id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">feature_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;uniquename&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract track" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">track</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sequence&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete feature L15" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;track&quot;: &quot;${track}&quot;, &quot;features&quot;: [ { &quot;uniquename&quot;: &quot;${feature_id}&quot; } ], &quot;operation&quot;: &quot;delete_feature&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/deleteFeature</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group 16" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">8</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1404149611000</longProp>
        <longProp name="ThreadGroup.end_time">1404149611000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&apos;username&apos;: &apos;user.sixteen@example.com&apos;, &apos;password&apos;: &apos;usersixteen&apos;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add transcript L16" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;add_transcript&quot;,&quot;username&quot;:&quot;user.sixteen@example.com&quot;,&quot;features&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:87287872,&quot;strand&quot;:1,&quot;fmax&quot;:87932060},&quot;name&quot;:&quot;XM_010821869.1&quot;,&quot;children&quot;:[{&quot;location&quot;:{&quot;fmin&quot;:87287872,&quot;strand&quot;:1,&quot;fmax&quot;:87288538},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:87288679,&quot;strand&quot;:1,&quot;fmax&quot;:87288837},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:87467683,&quot;strand&quot;:1,&quot;fmax&quot;:87467779},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:87488318,&quot;strand&quot;:1,&quot;fmax&quot;:87488380},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:87511641,&quot;strand&quot;:1,&quot;fmax&quot;:87511713},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:87604951,&quot;strand&quot;:1,&quot;fmax&quot;:87605053},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:87616038,&quot;strand&quot;:1,&quot;fmax&quot;:87616149},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:87622119,&quot;strand&quot;:1,&quot;fmax&quot;:87622330},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:87624139,&quot;strand&quot;:1,&quot;fmax&quot;:87624163},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:87626655,&quot;strand&quot;:1,&quot;fmax&quot;:87626759},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:87644447,&quot;strand&quot;:1,&quot;fmax&quot;:87644539},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:87649038,&quot;strand&quot;:1,&quot;fmax&quot;:87649117},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:87651477,&quot;strand&quot;:1,&quot;fmax&quot;:87651511},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:87652056,&quot;strand&quot;:1,&quot;fmax&quot;:87652119},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:87656577,&quot;strand&quot;:1,&quot;fmax&quot;:87656652},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:87752228,&quot;strand&quot;:1,&quot;fmax&quot;:87752313},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:87757609,&quot;strand&quot;:1,&quot;fmax&quot;:87757668},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:87758668,&quot;strand&quot;:1,&quot;fmax&quot;:87758774},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:87795380,&quot;strand&quot;:1,&quot;fmax&quot;:87795540},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:87868964,&quot;strand&quot;:1,&quot;fmax&quot;:87869112},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:87899661,&quot;strand&quot;:1,&quot;fmax&quot;:87899985},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:87921109,&quot;strand&quot;:1,&quot;fmax&quot;:87921275},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:87922366,&quot;strand&quot;:1,&quot;fmax&quot;:87922417},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:87926838,&quot;strand&quot;:1,&quot;fmax&quot;:87926880},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:87928096,&quot;strand&quot;:1,&quot;fmax&quot;:87932060},&quot;type&quot;:{&quot;name&quot;:&quot;exon&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}},{&quot;location&quot;:{&quot;fmin&quot;:87288683,&quot;strand&quot;:1,&quot;fmax&quot;:87926872},&quot;type&quot;:{&quot;name&quot;:&quot;CDS&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;type&quot;:{&quot;name&quot;:&quot;mRNA&quot;,&quot;cv&quot;:{&quot;name&quot;:&quot;sequence&quot;}}}],&quot;track&quot;:&quot;GK000030.2&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/addTranscript</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract feature_id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">feature_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;uniquename&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract track" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">track</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sequence&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete feature L16" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;track&quot;: &quot;${track}&quot;, &quot;features&quot;: [ { &quot;uniquename&quot;: &quot;${feature_id}&quot; } ], &quot;operation&quot;: &quot;delete_feature&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${instance_name}/annotationEditor/deleteFeature</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${instance_name}/Login?operation=logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="MonitorHealthVisualizer" testclass="ResultCollector" testname="Monitor Results" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <intProp name="RespTimeGraph.linestrockwidth">1</intProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="DistributionGraphVisualizer" testclass="ResultCollector" testname="Distribution Graph (alpha)" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
        <stringProp name="ConstantTimer.delay">300</stringProp>
        <stringProp name="RandomTimer.range">100.0</stringProp>
      </GaussianRandomTimer>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
