sudo: required
dist: xenial

language: java

node_js:
  - "12"

python:
	- '3.6'

env:
  - DB=postgres TEST_SUITE=apollo
  - DB=mysql TEST_SUITE=apollo
  - DB=h2 TEST_SUITE=apollo
  - DB=h2 TEST_SUITE=python-apollo
  - DB=h2 TEST_SUITE=javascript

addons:
  postgresql: "9.6"
  apt:
    packages:
    - mysql-server-5.7
    - mysql-client-core-5.7
    - mysql-client-5.7
    - python3

services:
- postgresql
- mysql

before_install:
  - npm install -g jshint

before_script:
  - node -v
  - npm -v
  - npm install -g yarn
  - "echo $JAVA_OPTS"
  - "export JAVA_OPTS='-Xmx2048m'"
  - "echo $JAVA_OPTS"
  - if [ ${DB} == "mysql" ]; then cp test/config/mysql.travis apollo-config.groovy; mysql -u root -e 'SET GLOBAL interactive_timeout=28800;'; mysql -u root -e 'SET GLOBAL wait_timeout=28800;'; mysql -u root -e 'SET GLOBAL connect_timeout=28800;';  mysql -u root -e 'create database apollo'; fi;
  - if [ ${DB} == "postgres" ]; then cp test/config/postgres.travis apollo-config.groovy; psql -c 'create database apollo;' -U postgres; psql -c 'create database apollo_chado' -U postgres; gunzip -c scripts/chado-schema-with-ontologies.sql.gz | psql -U postgres -h localhost -d apollo_chado; fi;

before_cache:
  - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock


cache:
  directories:
    - extlib/
    - $HOME/.grails/
    - $HOME/.m2/
    - $HOME/.npm/
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
script:
  - |
    if [[ $TEST_SUITE == "apollo" ]]; then
      travis_wait ./gradlew installJBrowseWebOnly gwtc installJBrowseTools && ./grailsw refresh-dependencies --stacktrace && ./grailsw test-app -coverage -xml --stacktrace && ./grailsw coveralls
    fi
  - |
    if [[ $TEST_SUITE == "javascript" ]]; then
      jshint client/apollo/js
    fi
  - |
    if [[ $TEST_SUITE == "python-apollo" ]]; then
      set -x
      ./grailsw run-app &
      git clone --depth=1 https://github.com/galaxy-genome-annotation/python-apollo
      cd python-apollo
      export ARROW_GLOBAL_CONFIG_PATH=`pwd`/test-data/arrow.yml
      pip3 install -U pip setuptools
      python3 setup.py install
      echo $PATH
      ./bootstrap_apollo.sh
      python3 setup.py nosetests
      killall java || true
    fi
